// Generated by view binder compiler. Do not edit!
package com.example.powerup.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.powerup.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView textViewAge;

  @NonNull
  public final TextView textViewAgeLabel;

  @NonNull
  public final TextView textViewHeight;

  @NonNull
  public final TextView textViewHeightLabel;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView textViewNameLabel;

  @NonNull
  public final TextView textViewUsername;

  @NonNull
  public final TextView textViewUsernameLabel;

  @NonNull
  public final TextView textViewWeight;

  @NonNull
  public final TextView textViewWeightLabel;

  private CustProfileBinding(@NonNull RelativeLayout rootView, @NonNull CardView cardView,
      @NonNull TextView textViewAge, @NonNull TextView textViewAgeLabel,
      @NonNull TextView textViewHeight, @NonNull TextView textViewHeightLabel,
      @NonNull TextView textViewName, @NonNull TextView textViewNameLabel,
      @NonNull TextView textViewUsername, @NonNull TextView textViewUsernameLabel,
      @NonNull TextView textViewWeight, @NonNull TextView textViewWeightLabel) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.textViewAge = textViewAge;
    this.textViewAgeLabel = textViewAgeLabel;
    this.textViewHeight = textViewHeight;
    this.textViewHeightLabel = textViewHeightLabel;
    this.textViewName = textViewName;
    this.textViewNameLabel = textViewNameLabel;
    this.textViewUsername = textViewUsername;
    this.textViewUsernameLabel = textViewUsernameLabel;
    this.textViewWeight = textViewWeight;
    this.textViewWeightLabel = textViewWeightLabel;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cust_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.textViewAge;
      TextView textViewAge = ViewBindings.findChildViewById(rootView, id);
      if (textViewAge == null) {
        break missingId;
      }

      id = R.id.textViewAgeLabel;
      TextView textViewAgeLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAgeLabel == null) {
        break missingId;
      }

      id = R.id.textViewHeight;
      TextView textViewHeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewHeight == null) {
        break missingId;
      }

      id = R.id.textViewHeightLabel;
      TextView textViewHeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewHeightLabel == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewNameLabel;
      TextView textViewNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewNameLabel == null) {
        break missingId;
      }

      id = R.id.textViewUsername;
      TextView textViewUsername = ViewBindings.findChildViewById(rootView, id);
      if (textViewUsername == null) {
        break missingId;
      }

      id = R.id.textViewUsernameLabel;
      TextView textViewUsernameLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewUsernameLabel == null) {
        break missingId;
      }

      id = R.id.textViewWeight;
      TextView textViewWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeight == null) {
        break missingId;
      }

      id = R.id.textViewWeightLabel;
      TextView textViewWeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightLabel == null) {
        break missingId;
      }

      return new CustProfileBinding((RelativeLayout) rootView, cardView, textViewAge,
          textViewAgeLabel, textViewHeight, textViewHeightLabel, textViewName, textViewNameLabel,
          textViewUsername, textViewUsernameLabel, textViewWeight, textViewWeightLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
